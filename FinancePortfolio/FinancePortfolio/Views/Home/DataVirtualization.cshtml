<div class="container data-virtualization-container" style="padding-bottom: 100px;">
    @{
        ViewData["Title"] = "DataVirtualization";
    }
    <div class="d-flex justify-content-center py-5 align-items-center">
        @await Html.PartialAsync("Navigation", new NavigationModel { navigationIndex = 2, currentView = "DataVirtualization" })
    </div>
    <h1 style="text-align: center;">Column Virtualization</h1>

<script>
    var url = "@Url.Content("~/stockHub")"
    var connection = new signalR.HubConnectionBuilder().withUrl(url).build();

    connection.on("Read", function (list) {
        $("#stocksGrid").data("kendoGrid").dataSource.data(list);
    });
    var hubStart = connection.start();
</script>

    @(Html.Kendo().Grid<FinancePortfolio.Models.GridStock>()
            .Name("stocksGrid")
            .Columns(columns =>
            {
                columns.Bound(p => p.Symbol).Width(90).Locked(true);
                columns.Bound(p => p.Name).Width(120);
                columns.Bound(p => p.Currency).Title("Currency").Width(90).ClientTemplate("#=stockCurrencyTemplate(data)#");
                columns.Bound(p => p.Price).Width(90).ClientTemplate("#=priceTemplate(data)#");
                columns.Bound(p => p.DayChange).Width(90).Title("Change").ClientTemplate("#=changeTemplate(data)#");
                columns.Bound(p => p.StockExchangeLong).Title("Full Name").Width(240);
                columns.Bound(p => p.StockExchangeShort).Title("Stock Name").Width(120);
                columns.Bound(p => p.Timezone).Width(90);
                columns.Bound(p => p.TimezoneName).Width(180);
                columns.Bound(p => p.YearLow).Width(120).Format("{0:n2}");
                columns.Bound(p => p.YearHigh).Width(120).Format("{0:n2}");
                columns.Bound(p => p.Volume).Width(190);
                columns.Bound(p => p.MarketCap).Width(220);
            })
            .Scrollable(scrollable=>scrollable.Virtual(GridVirtualizationMode.Columns))
            .Editable()
            .Mobile()
            .HtmlAttributes(new { style = "height:600px; width: 700px; margin: auto;" })
            .DataSource(dataSource => dataSource
                .SignalR()
                .AutoSync(true)
                .Transport(t=>t
                    .Hub("connection")
                    .Promise("hubStart")
                    .Server(s=>s.Read("Read"))
                )
                .PageSize(20)
            )
    )
</div>