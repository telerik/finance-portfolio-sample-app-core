<div class="container">
    <div class="row py-4 d-flex justify-content-between align-items-center">
        <div class="col col-4 d-flex daterange-input-wrap">
            @(Html.Kendo().DateRangePicker()
            .Name("daterangepicker")
            .Max(DateTime.Today)
            .Labels(false)
            .HtmlAttributes(new { style = "width: 100%", title = "daterangepicker" })
            )
        </div>

        <ul id="timeFilter" class="k-reset d-flex col-3">
            <li class="ml-3">
                <span>1H</span>
                <span>4H</span>
                <span>12H</span>
                <span>1D</span>
                <span>4H</span>
                <span>1W</span>
            </li>
        </ul>

        <div class="col-4">
            @(Html.Kendo().DropDownList()
          .Name("interval")
          .DataTextField("Text")
          .DataValueField("Value")
          //.Events(e => e.Change("change"))
          .BindTo(new List<SelectListItem>() {
              new SelectListItem() {
                  Text = "Interval: 5M",
                  Value = "1"
              },
              new SelectListItem() {
                  Text = "Interval: 15M",
                  Value = "2"
              },
              new SelectListItem() {
                  Text = "Interval: 30M",
                  Value = "3"
              }
          })
          .Value("1")
          .HtmlAttributes(new { style = "width: 40%" })
            )

            @(Html.Kendo().DropDownList()
          .Name("dropdown-list-selection")
          .DataTextField("Text")
          .DataValueField("Value")
          .ValueTemplate("<span><img src='/assets/#: Value #.png' alt='#: Text #' />   #: Text #</span>")
          .Template("<span><img src='/assets/#: Value #.png' alt='#: Text #' />   #: Text #</span>")
          //.Events(e => e.Change("change"))
          .BindTo(new List<SelectListItem>() {
              new SelectListItem() {
                  Text = "Candle",
                  Value = "candle"
              },
              new SelectListItem() {
                  Text = "Line",
                  Value = "line"
              },
              new SelectListItem() {
                  Text = "Area",
                  Value = "area"
              }
          })
          .Value("1")
          .HtmlAttributes(new { style = "width: 40%" })
            )
        </div>
    </div>

    <div class="row">
        <div class="col">
            @(Html.Kendo().StockChart<FinancePortfolio.Models.StockIntervalDetails>()
                .Name("stockChart")
                .DataSource(ds =>
                    ds.Read(read => read.Action("MyFunc", "Home").Data("additionalChartData")
                ))
                .DateField("Date")
                .CategoryAxis(axis => axis
                    .Field("Date")
                    .BaseUnitStep(1)
                    .BaseUnit(ChartAxisBaseUnit.Hours)
                    .Crosshair(xh => xh.Visible(true))
                    .MaxDateGroups(20)
                    .MinorGridLines(mgl => mgl.Visible(true))
                    .MajorGridLines(mgl => mgl.Visible(true))
                    .BaseUnit(ChartAxisBaseUnit.Hours)
                    .BaseUnitStep(1)
            )
                .ValueAxis(axis => axis.Name("volume").Min(0))
                // .ValueAxis(axis => axis.Numeric().Line(line => line.Visible(false)))
                //.ValueAxis(axis => axis.Numeric("volumeAxis").Pane("volumePane").Visible(false))
                .Series(series =>
                {
                    series.Candlestick(s => s.Open, s => s.High, s => s.Low, s => s.Close)
                        .Aggregate(c => c.Open(ChartSeriesAggregate.Min).High(ChartSeriesAggregate.Max).Low(ChartSeriesAggregate.Min).Close(ChartSeriesAggregate.Max))
                        .Border(b => b.Color("transparent"))
                        .Color("#5CB85C")
                        .DownColor("#D9534F")
                        //.Axis("Close")
                        .OpenField("Open")
                        .CloseField("Close")
                        .HighField("High")
                        .Gap(0.75);
                    //series.Column(s => s.Volume).Axis("Volume");
                    //    .CategoryField("Date");

                })
                .Navigator(nav => nav
                .Series(series =>
                {
                    series.Area(s => s.Close).CategoryField("Date").Aggregate(ChartSeriesAggregate.Avg);
                })
                )
            )
        </div>
    </div>
</div>


<script>

    $("#timeFilter li span").click(function () {
       $($(this)).css('font-weight', 'bold');
    });



</script>

<style>
    input.k-textbox {
        width: 140px !important;
    }
</style>
